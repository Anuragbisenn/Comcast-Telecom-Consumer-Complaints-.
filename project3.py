# -*- coding: utf-8 -*-
"""project3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PW90I5c1X5VipzIvowFpbLOAtjLw7-co
"""

import pandas as pd 
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

"""1.**transforming data csv to pandas dataframe** """

data=pd.read_csv("/content/drive/MyDrive/simplilearn/python with data science /project3/Comcast_telecom_complaints_data.csv")

data.head()

data.shape

data.describe()

data.info()

data['Date']=pd.to_datetime(data['Date'],format='%d-%m-%y')

data['day']=data['Date'].dt.day
data['month']=data.Date.dt.month
data['year']=data.Date.dt.year

data.head()

data.year.nunique()

data.columns

data['Customer_Complaint']=data['Customer Complaint']

data

"""2.**Provide the trend chart for the number of complaints at monthly and daily granularity levels.**"""

data.drop(columns='Customer Complaint',axis=1,inplace=True)

A=data.Customer_Complaint.groupby(data['month']).count()

A.plot(x="month", y="Customer_Complaint", kind="line")

"""month wise complaint"""

data["Date"].value_counts().plot();

""" 3.**Provide a table with the frequency of complaint types.**"""

table=data.Customer_Complaint.groupby(data['Ticket #']).sum()

table=pd.DataFrame(table.value_counts() )

table.shape

table.head(10)

"""4. **max complaints for**"""

table.idxmax()

A=data.Status.groupby(data['Ticket #'])

new_status=[]
for i in data['Status']:
  if i=='Open' or i=='Pending':
    new_status.append('Open')
  else :
    new_status.append('closed')

data['new_status']=new_status

data.head(3)

data.new_status.unique()

status_complaints=data.groupby(['State','new_status']).size().unstack().fillna(0)
status_complaints

status_complaints.plot(kind="barh" , figsize=(30,50), stacked=True)

"""**which state has maximum complaint**"""

data.groupby("State").size().sort_values(ascending=False)[:1]

"""**resolved complaint via internet and customercare**"""

A=data.new_status.value_counts()

A=data.new_status.groupby(data['Received Via']==('internet' or 'Customer Care Calls' ))

data.columns

df_received = data[data['Received Via'].isin(['Internet','Customer Care Call'])]

df_received.head()

df_received.new_status.value_counts().plot(kind='pie',autopct='%1.1f%%',
                        #explode = (0.15, 0, 0, 0, 0), startangle=45, shadow=False, colors = colors,
                        figsize = (14,6))
plt.axis('equal')
plt.title('# complaints Status through Internet & Customer Care\n')
plt.tight_layout()
plt.show()

"""**...................................................end................................** *italicized text*"""

